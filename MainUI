import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Vector;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.block.BlockBorder;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.renderer.xy.XYSplineRenderer;
import org.jfree.chart.title.TextTitle;
//import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.Year;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

public class MainUI extends JFrame implements ActionListener {
	selection select = new selection();
	JFrame frame;
	JPanel north,south, center;
	JButton add,remove,recalculate;
	
	public MainUI() {
		frame = new JFrame();
		north = new JPanel();
		center = new JPanel();
		
		frame.setSize(900,600);//frame  size
		frame.setVisible(true);
		//panel.setBackground(Color.darkGray);
		
		//add country selection to panel
		JLabel countryLabel = new JLabel("Choose a country: ");
		north.add(countryLabel);
		//set country selection list
		Vector<String> countriesNames = new Vector<String>();
		countriesNames.add("Brazil");
		countriesNames.add("Canada");
		countriesNames.add("China");
		countriesNames.add("France");
		countriesNames.add("USA");
		JComboBox<String> countrySele = new<String> JComboBox(countriesNames);
		north.add(countrySele);
		
		//set selected country
		String country = (String) countrySele.getSelectedItem();
		select.setCountry(country);
		
		//start year selection
		JLabel sYearLabel = new JLabel("From");
		north.add(sYearLabel);
		Vector<Integer> year = new Vector<Integer>();
		for(int i = 2021; i >= 2010; i-- ) {
			year.add(i);
		}
		JComboBox<Integer> sYearSele = new JComboBox(year);
		north.add(sYearSele);
		
		//set selected star year
		int sYear = (Integer) sYearSele.getSelectedItem();
		select.setYearStart(sYear);
		
		//end year selection
		JLabel eYearLabel = new JLabel("To");
		north.add(eYearLabel);
		JComboBox<Integer> eYearSele = new JComboBox(year);	
		north.add(eYearSele);
		
		//set selected star year
		int eYear = (Integer) eYearSele.getSelectedItem();
		select.setYearEnd(eYear);
		
		//put all selection on top
		frame.getContentPane().add(BorderLayout.NORTH, north);
		
		//select available viewer
		JPanel south = new JPanel();
		JLabel viewLabel = new JLabel("Available Viwes:");
		south.add(viewLabel);
		
		Vector<String> chartList = new Vector<String>();
		chartList.add("Pie Chart");
		chartList.add("Line Chart");
		chartList.add("Bar Chart");
		chartList.add("Scatter Chart");
		chartList.add("Report");
		JComboBox <String>availableChart = new JComboBox<String>(chartList);	
		south.add(availableChart);
		String chart = (String)availableChart.getSelectedItem();

		//add and remove button
		add = new JButton("+");
		remove = new JButton("-");
		south.add(add);
		south.add(remove);
		add.addActionListener(this);
		remove.addActionListener(this);
			
		//select analysis method
		JLabel anaLabel = new JLabel("Choose analysis method:");
		south.add(anaLabel);
		
		Vector<String> analysisMethod = new Vector<String>();
		analysisMethod.add("pm2.5 vs ForestArea");
		analysisMethod.add("ForestArea vs gdp");
		analysisMethod.add("co2 vs energy");
		analysisMethod.add("co2 vs pm2.5");
		analysisMethod.add("co2 vs gdp");
		analysisMethod.add("co2 vs ForestArea vs gdp");
		analysisMethod.add("co2 vs ForestArea");
		analysisMethod.add("population vs pm2.5");
		JComboBox<String> anaMethod = new JComboBox<String>(analysisMethod);
		south.add(anaMethod);
		
		String analysis = (String)anaMethod.getSelectedItem();
		select.setAnalysis(analysis);
		
		recalculate = new JButton ("recalculate");
		recalculate.addActionListener(this);
		
		frame.getContentPane().add(BorderLayout.SOUTH, south);
		
		String s = select.toString();
		
		JTextArea report = new JTextArea(s);
		center.add(report);
		
		frame.getContentPane().add(BorderLayout.CENTER, center);
		
		
	}

	
	
	
	public static void main (String[] args) {
		MainUI gui = new MainUI();
		
	}





	public void actionPerformed(ActionEvent e) {
		selection s = new selection();
		  s.year1 = 2005;
		  s.year2 = 2008;
		  s.country = "can";
		  Strategy_factory fac = new Strategy_factory();
		  s.analysis = "co2 vs gdp";
		 JButton button =(JButton) e.getSource();
		  result co2_vs_gdp;
		try {
			co2_vs_gdp = fac.factoryMethod(s).calculate(s);
			if(button == add && select.getAnalysis().equals("co2 vs gdp")) {
			createLineChart pie = new createLineChart(center,co2_vs_gdp);
			}
		} catch (nameException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		

		
		
		
		
		//else if(button == remove) {
			
		//}
		
	}
}



